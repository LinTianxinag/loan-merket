package com.fuhui.service.impl;

import com.fuhui.common.util.Constants;
import com.fuhui.common.util.MD5;
import com.fuhui.common.util.RedisUtil;
import com.fuhui.common.util.RegExpUtil;
import com.fuhui.mybatis.sys.dao.SysUserMapper;
import com.fuhui.mybatis.sys.model.SysUser;
import com.fuhui.service.ManLoginService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

/**
 * @author : xufanglong
 * @Description:后台管理的方法
 * @Date: create in 16:22 2017/12/2
 * @Modified By:
 */
@Service
public class ManLoginServiceImpl implements ManLoginService {

    @Autowired
    private SysUserMapper sysUserMapper;
    /**
     * 验证登陆
     * @return
     */
    @Override
    public SysUser checkAdmin(HttpServletRequest req, ModelAndView model, SysUser sysUser) {
        String err = checkSysUser(req,sysUser);
        if(!err.equals("")){
            model.addObject("err",err);
            return null;
        }
        sysUser.setUserPwd(MD5.GetMD5Code(MD5.GetMD5Code(sysUser.getUserPwd())+sysUser.getMobile()));
        List<SysUser> users = sysUserMapper.selectUsers(sysUser);
        SysUser user = null;
        if(users.size() == 1){user = users.get(0);}
        if(user != null){
            RedisUtil.set(Constants.WEB_SESSION + req.getSession().getId(),24 * 60 * 60,sysUser.getUserId());
            RedisUtil.set(Constants.ADMIN_MOBILE + req.getSession().getId(),24 * 60 * 60,sysUser.getMobile());
            model.addObject("user",user);
            model.addObject("adminmobile",sysUser.getMobile());
            model.setViewName("home");      //进入后台主页
        }else{
            model.addObject("err","该账户未注册");
            return null;
        }
        return user;
    }

    @Override
    public SysUser adminRegister(HttpServletRequest req, ModelAndView model, SysUser sysUser) {
        return null;
    }

    /**
     * 退出登录
     * @param req
     */
    @Override
    public void logout(HttpServletRequest req) {
        RedisUtil.del(Constants.APP_SESSION + req.getSession().getId());
        return;
    }

    /**
     * 获取管理员列表
     * @param sysUser
     * @return
     */
    @Override
    public List<SysUser> getAdminList(SysUser sysUser) {

        return null;
    }

    /**
     * 通过手机号获取管理员的信息
     * @param mobile
     * @return
     */
    @Override
    public SysUser getAdminByMobile(String mobile) {
        SysUser user=sysUserMapper.selectByMobile(mobile);
        return user;
    }
    private String checkSysUser(HttpServletRequest req,SysUser sysUser){
        String err = "";
        String code=req.getParameter("code");
        String checkcode = RedisUtil.get(Constants.SMS_CODE + req.getSession().getId());

        if(sysUser.getMobile() == null || !RegExpUtil.checkMobileType(sysUser.getMobile())) {
            err = "手机号错误";
        }
        else if(sysUser.getUserPwd() == null || !RegExpUtil.checkPwdType(sysUser.getUserPwd())) {
            err = "密码错误";
        }
//        else if(checkcode == null || !checkcode.equals('"'+code+'"')){
//            err = "验证码错误";
//        }
        return err;

    }
}
