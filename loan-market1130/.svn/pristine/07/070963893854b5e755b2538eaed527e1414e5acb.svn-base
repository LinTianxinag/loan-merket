package com.fuhui.controller;

import com.alibaba.fastjson.JSONObject;
import com.fuhui.common.entity.QueryCondition;
import com.fuhui.common.util.Constants;
import com.fuhui.common.util.RedisUtil;
import com.fuhui.mybatis.generator.model.Platform;
import com.fuhui.service.ManPlaService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.text.ParseException;

/**
 * @author : xufanglong
 * @Description:用户平台的添加及变更
 * @Date: create in 10:30 2017/12/7
 * @Modified By:
 */

@RestController
public class ManplatController {

    @Autowired
    private ManPlaService manPlaService;


    /**
     * 平台的名称检测
     * @param request
     * @param response
     * @return
     */
    @RequestMapping("/plat/namecheck")
    public JSONObject checkPlatName(HttpServletRequest request,HttpServletResponse response){
        JSONObject object=manPlaService.checkPlatName(request,response);
        return  object;
    }


    /**
     * 平台增加的方法
     * @param request
     * @param response
     * @return
     */
    @RequestMapping("/plat/add")
    public ModelAndView addPlatForm(HttpServletRequest request, HttpServletResponse response){
        String mobile= RedisUtil.get(Constants.ADMIN_MOBILE + request.getSession().getId());
        ModelAndView modelAndView=new ModelAndView("home");
        modelAndView.addObject("mobile",mobile);
        boolean flag=manPlaService.addPlatForm(request,response);
        if(flag ==true){
        }else{
        }
        return modelAndView;
    }


    @RequestMapping("/plat/update")
    public ModelAndView updatePlatForm(HttpServletRequest request, HttpServletResponse response){
        String mobile= RedisUtil.get(Constants.ADMIN_MOBILE + request.getSession().getId());
        ModelAndView modelAndView=new ModelAndView("home");
        modelAndView.addObject("mobile",mobile);
        boolean flag=manPlaService.updatePlatForm(request,response);
        if(flag ==true){
        }else{
        }
        return modelAndView;
    }





    /**
     * 平台总览列表（全部、已上架、已下架）
     * @Author Ren
     * @param req
     * @param res
     * @param queryCondition
     * @return
     */
    @RequestMapping("/platform")
    public ModelAndView ManangePlatformList(HttpServletRequest req, HttpServletResponse res, QueryCondition queryCondition) throws ParseException {
        ModelAndView model=new ModelAndView("home");
        String mobile= RedisUtil.get(Constants.ADMIN_MOBILE + req.getSession().getId());
        model.addObject("mobile",mobile);
        return model;
    }

    /**
     * 平台总览列表（全部、已上架、已下架）
     * @Author Ren
     * @param req
     * @param res
     * @param queryCondition
     * @return
     */
    @RequestMapping("/findplatformlist")
    @ResponseBody
    public Object FindManangePlatformList(HttpServletRequest req,HttpServletResponse res, QueryCondition queryCondition) throws ParseException {
        ModelAndView model = new ModelAndView();
        JSONObject obj = new JSONObject();
        manPlaService.getPlaList(req,model,queryCondition);
        obj.put("total",model.getModel().get("total"));
        obj.put("list",model.getModel().get("list"));
        obj.put("page",model.getModel().get("page"));
        obj.put("tdcount",model.getModel().get("tdcount"));
        return obj;
    }

    /**
     * 平台下架
     * @Author Ren
     * @param req
     * @param res
     * @param platform
     * @return
     */
    @RequestMapping("/cancelPla")
    @ResponseBody
    public Object cancelPlatform(HttpServletRequest req,HttpServletResponse res, Platform platform) throws ParseException {
        ModelAndView model = new ModelAndView();
        JSONObject obj = new JSONObject();
        boolean b = false;
        int result = manPlaService.cancelPla(req,model,platform);
        if(result == 1){
            b=true;
        }
        obj.put("result",b);
        return obj;

    }


    /**
     * 获取平台的计数
     * @param request
     * @param response
     * @return
     */
    @PostMapping("/plat/getplatlist")
    public JSONObject getPlatListCount(HttpServletRequest request,HttpServletResponse response){
        return manPlaService.getPlaListCount(request,response);

    }

}
